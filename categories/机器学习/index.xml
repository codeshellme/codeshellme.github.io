<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>机器学习 on 码农充电站</title>
    <link>https://codeshellme.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 机器学习 on 码农充电站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>@码农充电站</copyright>
    <lastBuildDate>Sun, 20 Dec 2020 22:38:52 +0800</lastBuildDate>
    
	<atom:link href="https://codeshellme.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Logistic 回归-原理及应用</title>
      <link>https://codeshellme.github.io/2020/12/ml-logistic-regression/</link>
      <pubDate>Sun, 20 Dec 2020 22:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/12/ml-logistic-regression/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 上一篇文章介绍了线性回归模型，它用于处理回归问题。 这次</description>
    </item>
    
    <item>
      <title>线性回归-如何对数据进行回归分析</title>
      <link>https://codeshellme.github.io/2020/12/ml-linear-regression/</link>
      <pubDate>Sat, 19 Dec 2020 22:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/12/ml-linear-regression/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 线性回归模型用于处理回归问题，也就是预测连续型数值。线</description>
    </item>
    
    <item>
      <title>AdaBoost 算法-分析波士顿房价数据集</title>
      <link>https://codeshellme.github.io/2020/12/ml-adaboost/</link>
      <pubDate>Tue, 15 Dec 2020 22:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/12/ml-adaboost/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 在机器学习算法中，有一种算法叫做集成算法，AdaBoo</description>
    </item>
    
    <item>
      <title>如何用Python 制作词云-对1000首古诗做词云分析</title>
      <link>https://codeshellme.github.io/2020/12/ml-wordcloud/</link>
      <pubDate>Sat, 12 Dec 2020 22:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/12/ml-wordcloud/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 今天来介绍一下如何使用 Python 制作词云。 词云又叫文字云，它可</description>
    </item>
    
    <item>
      <title>EM 算法-对鸢尾花数据进行聚类</title>
      <link>https://codeshellme.github.io/2020/12/ml-em/</link>
      <pubDate>Sat, 05 Dec 2020 22:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/12/ml-em/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 之前介绍过K 均值算法，它是一种聚类算法。今天介绍EM 算</description>
    </item>
    
    <item>
      <title>Apriori 算法-如何进行关联规则挖掘</title>
      <link>https://codeshellme.github.io/2020/12/ml-apriori/</link>
      <pubDate>Thu, 03 Dec 2020 22:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/12/ml-apriori/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 在数据分析领域有一个经典的故事，叫做“尿布与啤酒”。 据</description>
    </item>
    
    <item>
      <title>K 均值算法-如何让数据自动分组</title>
      <link>https://codeshellme.github.io/2020/12/ml-kmean/</link>
      <pubDate>Tue, 01 Dec 2020 22:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/12/ml-kmean/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 之前介绍到的一些机器学习算法都是监督学习算法。所谓监督</description>
    </item>
    
    <item>
      <title>KNN 算法-实战篇-如何识别手写数字</title>
      <link>https://codeshellme.github.io/2020/11/ml-knn2/</link>
      <pubDate>Mon, 30 Nov 2020 22:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-knn2/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 上篇文章介绍了KNN 算法的原理，今天来介绍如何使用KN</description>
    </item>
    
    <item>
      <title>KNN 算法-理论篇-如何给电影进行分类</title>
      <link>https://codeshellme.github.io/2020/11/ml-knn1/</link>
      <pubDate>Mon, 30 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-knn1/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io KNN 算法的全称是K-Nearest Neighbor，中文</description>
    </item>
    
    <item>
      <title>PageRank 算法-Google 如何给网页排名</title>
      <link>https://codeshellme.github.io/2020/11/ml-page-rank/</link>
      <pubDate>Sun, 29 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-page-rank/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 在互联网早期，随着网络上的网页逐渐增多，如何从海量网页</description>
    </item>
    
    <item>
      <title>如何使用Python 进行数据可视化</title>
      <link>https://codeshellme.github.io/2020/11/ml-data-visualization/</link>
      <pubDate>Sat, 28 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-data-visualization/</guid>
      <description>微信公众号：码农充电站pro 个人主页：https://codeshellme.github.io 在进行数据分析的时候，经常需要将数据进行可视</description>
    </item>
    
    <item>
      <title>数据变换-归一化与标准化</title>
      <link>https://codeshellme.github.io/2020/11/ml-data-transform/</link>
      <pubDate>Fri, 27 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-data-transform/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 一般在机器学习的模型训练之前，有一个比较重要的步骤是数</description>
    </item>
    
    <item>
      <title>计算机如何理解事物的相关性-文档的相似度判断</title>
      <link>https://codeshellme.github.io/2020/11/ml-space-vector-model/</link>
      <pubDate>Thu, 26 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-space-vector-model/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 生活中，我们经常会对比两个事物的相关性，也可以叫做相似</description>
    </item>
    
    <item>
      <title>朴素贝叶斯分类-实战篇-如何进行文本分类</title>
      <link>https://codeshellme.github.io/2020/11/ml-nb2/</link>
      <pubDate>Mon, 23 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-nb2/</guid>
      <description>微信公众号：码农充电站pro 个人主页：https://codeshellme.github.io 上篇介绍了朴素贝叶斯的原理，本篇来介绍如何用</description>
    </item>
    
    <item>
      <title>朴素贝叶斯分类-理论篇-如何通过概率解决分类问题</title>
      <link>https://codeshellme.github.io/2020/11/ml-nb1/</link>
      <pubDate>Tue, 17 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-nb1/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 贝叶斯原理是英国数学家托马斯·贝叶斯于18 世纪提出的，</description>
    </item>
    
    <item>
      <title>决策树算法-实战篇-鸢尾花及波士顿房价预测</title>
      <link>https://codeshellme.github.io/2020/11/ml-decisiontree2/</link>
      <pubDate>Sun, 15 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-decisiontree2/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 上篇文章介绍了决策树算法的理论篇，本节来介绍如何用决策</description>
    </item>
    
    <item>
      <title>决策树算法-理论篇-如何计算信息纯度</title>
      <link>https://codeshellme.github.io/2020/11/ml-decisiontree1/</link>
      <pubDate>Sun, 08 Nov 2020 21:38:52 +0800</pubDate>
      
      <guid>https://codeshellme.github.io/2020/11/ml-decisiontree1/</guid>
      <description>公号：码农充电站pro 主页：https://codeshellme.github.io 1，什么是决策树？ 决策树是一种机器学习算法，我们可以使</description>
    </item>
    
  </channel>
</rss>